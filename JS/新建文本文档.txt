首先，一定要打好前端基础，前端基础的知识就是 3个方面，HTML、JS、CSS，每个方面都值得深入学习，不管前端玩的花哨，最终运行到浏览器还是这3个。其次，针对性的去学习掌握一门前端框架，比如 Vue，一定要了解它的产生的背景，解决什么问题，核心思想；还需要熟读它的官方文档，关注这个框架的一个变化；使用它去写一些 demo，写一些小组件，完成一个完整的项目；学习 Vue 周边的生态插件（Vuex、Vue Router 等），把它们运用到项目中；最后去阅读它的源码，去了解的它的内部实现细节。只要精通了一门前端框架（知其然并知其所以然），再去学习其它框架会轻松很多，因为它们很多设计思想，功能都是相通的。对于一些构建工具如 webpack，也要去学习和掌握，要会看文档，了解其中的配置都是什么意思。 4.有哪些可以利用的工具和资源来帮助我们学习 1. github；现在几乎所有开源的项目都会托管到 github ，同学们一定要利用起来，学会使用它。除了 star 和 fork 一些不错的开源项目外，也可以上传自己的代码，甚至尝试自己也写一些开源的项目。并且，一般我们用了某某开源项目遇到了问题，都可以去翻它的 issue 去查找问题（没有也可以开 issue），这是一个解决问题的非常高效的途径。 2. stackoverflow ；同学们在开发过程中经常会遇到问题，如果在自己对这些报错信息不理解的情况下，带着这些报错信息去 stackoverflow 上查，往往能得到解决方案。 3. caniuse； 当同学们遇到对一些功能的兼容性有疑问的时候，去这个网站上查，可以得到答案。 4. 知乎、掘金等社区；知乎和掘金上有不少不错的专栏、文章和一些不错的问题和回答，可以关注和订阅。 5. 微信公众号；关注一些知名的公众号如前端之巅、前端早读课等等，利用碎片化的时间学习。 6. 书籍；看书是系统学习的最好途径，尽量选择一些国外大牛写的书籍、图灵和 O'Reilly 的书一般都不错。 7. 视频教学；视频教学给同学们提供了接触大型互联网公司高工导师的机会，老师会把自己在工作中的一些经验，思考方式，编码习惯，编程技巧等等融入到教学课程中，把这些知识输出给学生。最后插播一则广告，想学习 Vue.js 的同学可以关注我的课程， 一定不会让你们失望:)